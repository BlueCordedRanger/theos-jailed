#!/bin/bash

source "$SETUP_ENVIRONMENT" "Patchinig tweak $TWEAK_NAME"

# https://github.com/dado3212/SnapchatReloaded/blob/master/patchapp.sh
if [ ! -r "$PROFILE" ]; then
	BUNDLEPROFILE="`grep -Fl "<string>iOS Team Provisioning Profile: $PROFILE</string>" ~/Library/MobileDevice/Provisioning\ Profiles/* | head -1`"
	if [ ! -r "$BUNDLEPROFILE" ]; then
		error "Failed to find profile for '$PROFILE'"
	fi
	PROFILE="$BUNDLEPROFILE"
fi

if ! hash "optool" 2>/dev/null; then
	error "Install optool and add it to your PATH: https://github.com/alexzielenski/optool"
fi

# copy the resources into the .app folder
if [ -d "$RESOURCES_DIR" ]; then
	log 2 "Copying resources"
	cp -a "$RESOURCES_DIR"/ "$APPDIR"
fi

# copy the files into the .app folder
log 2 "Copying .dylib dependencies"
cp "$DYLIB" "$APPDIR"
CODESIGN_FILES=("`basename "$DYLIB"`")
INJECT_FILES=("`basename "$DYLIB"`")

if [ "$USE_CYCRIPT" = "1" ]; then
	cp "$CYCRIPT" "$APPDIR"
	CODESIGN_FILES+=("`basename "$CYCRIPT"`")
	INJECT_FILES+=("`basename "$CYCRIPT"`")
fi

# sign all of the .dylib files we're injecting into the app
for file in "${CODESIGN_FILES[@]}"; do
	log 3 "Codesigning $file"
	codesign -fs "$CODESIGN_NAME" "$APPDIR/$file" >& /dev/null
	if [ "$?" != "0" ]; then
		error "Codesign failed"
	fi
done

for file in "${INJECT_FILES[@]}"; do
	log 4 "Injecting $file"
	optool install -c load -p "@executable_path/$file" -t $APPDIR/$APP_BINARY >& /dev/null
	if [ "$?" != "0" ]; then
		error "Failed to inject $file into $APP. Can I interest you in debugging the problem?"
	fi
done
chmod +x "$APPDIR/$APP_BINARY"

# generate the correct entitlements
log 5 "Generating entitlements"
cat <<XML > "$ENTITLEMENTS"
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
XML
strings "$PROFILE" | sed -e '1,/<key>Entitlements<\/key>/d' -e '/<\/dict>/,$d' >> "$ENTITLEMENTS"
cat <<XML >> "$ENTITLEMENTS"
</dict>
</plist>
XML

# Make sure to sign any Plugins in the app. Do NOT attempt to optimize this, the order is important!
if [ -d "$APPDIR/PlugIns" ]; then
	log 3 "Codesigning plugins"
fi
for file in `ls -1 "$APPDIR"/PlugIns/com.*/com.* 2>/dev/null`; do
	codesign -fs "$CODESIGN_NAME" --deep --entitlements "$ENTITLEMENTS" $file >/dev/null 2>&1
done
for file in `ls -d1 "$APPDIR"/PlugIns/com.* 2>/dev/null`; do
	codesign -fs "$CODESIGN_NAME" --deep --entitlements "$ENTITLEMENTS" $file >/dev/null 2>&1
done

# re-sign Frameworks, too
if [ -d "$APPDIR/Frameworks" ]; then
	log 3 "Codesigning frameworks"
fi
for file in `ls -1 "$APPDIR"/Frameworks/* 2>/dev/null`; do
	codesign -fs "$CODESIGN_NAME" --entitlements "$ENTITLEMENTS" $file >/dev/null 2>&1
done

# re-sign the .app
log 3 "Codesigning $APP"
cd "$STAGING_DIR/Payload"
codesign -fs "$CODESIGN_NAME" --deep --entitlements "$ENTITLEMENTS" $APP 2>/dev/null
if [ "$?" != "0" ]; then
	error "Failed to sign $APP with entitlements $ENTITLEMENTS"
fi
cd "$STAGING_DIR"

# re-pack the .ipa
log 1 "Repacking $APP"
IPA_PATCHED="`basename "${IPA%*.ipa}-patched.ipa"`"
zip -9r "$IPA_PATCHED" Payload/ >/dev/null 2>&1
if [ "$?" != "0" ]; then
	error "Failed to compress the app into a .ipa file."
fi
mkdir -p "$PACKAGES_DIR"
rm -f "$PACKAGES_DIR/$IPA_PATCHED" >/dev/null 2>&1
mv "$IPA_PATCHED" "$PACKAGES_DIR/"
if [ "$?" != "0" ]; then
	error "Failed to move .ipa file into $PACKAGES_DIR."
fi
success "Wrote $IPA_PATCHED"
